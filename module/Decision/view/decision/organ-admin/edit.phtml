<?php

declare(strict_types=1);

use Application\View\HelperTrait;
use Decision\Form\OrganInformation as OrganInformationForm;
use Decision\Service\AclService as DecisionAclService;
use Laminas\View\Renderer\PhpRenderer;

/**
 * @var PhpRenderer|HelperTrait $this
 * @var OrganInformationForm $form
 */

$lang = $this->plugin('translate')->getTranslator()->getLocale();

$this->headScript()
    ->appendFile(
        $this->basepath('js/imagesloaded.pkgd.min.js'),
        'text/javascript',
        ['nonce' => NONCE_REPLACEMENT_STRING],
    )
    ->appendFile(
        $this->basepath('js/jquery.Jcrop.min.js'),
        'text/javascript',
        ['nonce' => NONCE_REPLACEMENT_STRING],
    )
    ->appendFile(
        $this->basepath('js/ckeditor/ckeditor.js'),
        'text/javascript',
        ['nonce' => NONCE_REPLACEMENT_STRING],
    );

if ('nl' === $lang) {
    $this->headScript()->appendFile(
        $this->basepath('js/ckeditor/translations/nl.js'),
        'text/javascript',
        ['nonce' => NONCE_REPLACEMENT_STRING],
    );
}

$this->headLink()
    ->appendStylesheet($this->basepath('css/jquery.Jcrop.min.css'))
    ->appendStylesheet($this->basepath('css/ckeditor/style.css'));

$this->breadcrumbs()
    ->addBreadcrumb($this->translate('Organs'), true, $this->url('admin_organ'))
    ->addBreadcrumb($this->translate('Edit'));
?>
<style>
    .cover-crop {
        width: 640px;
        height: 160px;
    }

    .thumbnail-crop {
        width: 320px;
        height: 180px;
    }

    .crop-area {
        border: 2px solid;
        background-color: #D40026;
    }
</style>
<?php
$form->prepare();

$form->setAttribute('method', 'post');
$form->setAttribute('role', 'form');
$form->setAttribute('id', 'editForm');
?>
<?= $this->form()->openTag($form); ?>
<h3><?= $this->translate('Edit organ information') ?></h3>

<div class="form-group">
    <?php
    $element = $form->get('website');
    $element->setAttribute('class', 'form-control');
    ?>
    <?= $this->formLabel($element); ?>
    <?= $this->formUrl($element); ?>
    <?= $this->formElementErrors($element); ?>
</div>

<div class="form-group">
    <?php
    $element = $form->get('email');
    $element->setAttribute('class', 'form-control');
    $element->setAttribute('required', 'required');
    ?>
    <?= $this->formLabel($element); ?>
    <?= $this->formEmail($element); ?>
    <?= $this->formElementErrors($element); ?>
</div>

<div class="form-group">
    <?php
    $element = $form->get('shortDutchDescription');
    $element->setAttribute('class', 'form-control');
    ?>
    <?= $this->formLabel($element); ?>
    <?= $this->formText($element); ?>
    <?= $this->formElementErrors($element); ?>
</div>

<div class="form-group">
    <?php
    $element = $form->get('shortEnglishDescription');
    $element->setAttribute('class', 'form-control');
    ?>
    <?= $this->formLabel($element); ?>
    <?= $this->formText($element); ?>
    <?= $this->formElementErrors($element); ?>
</div>

<div class="form-group">
    <?php
    $element = $form->get('dutchDescription');
    $element->setAttribute('id', 'dutch-description')
        ->setAttribute('class', 'form-control');
    ?>
    <?= $this->formLabel($element); ?>
    <?= $this->formTextArea($element); ?>
    <?= $this->formElementErrors($element); ?>
</div>

<div class="form-group">
    <?php
    $element = $form->get('englishDescription');
    $element->setAttribute('id', 'english-description')
        ->setAttribute('class', 'form-control');
    ?>
    <?= $this->formLabel($element); ?>
    <?= $this->formTextArea($element); ?>
    <?= $this->formElementErrors($element); ?>
</div>
<div class="form-group">
    <?php
    $element = $form->get('thumbnail');
    $element->setAttribute('class', 'form-control');
    $element->setAttribute('id', 'thumbnailUpload')
    ?>
    <?= $this->formLabel($element); ?>
    <?= $this->formFile($element) ?>
    <?= $this->formElementErrors($element) ?>
    <br>
    <div id="thumbnailPreviewAlert" style="display:none" class="alert alert-info">
        <?= $this->translate('To optimally display your image on the overview page, please crop it below. The cropped aspect ratio is 16:9.') ?>
    </div>
    <br>
    <div id="thumbnailPreview"></div>
</div>
<div class="form-group">
    <?php
    $element = $form->get('cover');
    $element->setAttribute('class', 'form-control');
    $element->setAttribute('id', 'coverUpload')
    ?>
    <?= $this->formLabel($element); ?>
    <?= $this->formFile($element) ?>
    <?= $this->formElementErrors($element) ?>
    <br>
    <div id="coverPreviewAlert" style="display:none" class="alert alert-info">
        <?= $this->translate('To optimally display your image your page, please crop it below. The cropped aspect ratio is 16:4.') ?>
    </div>
    <br>
    <div id="coverPreview"></div>
</div>
<hr>
<?php
foreach (['cover', 'thumbnail'] as $type) {
    foreach (['X', 'Y', 'Width', 'Height'] as $param) {
        echo $this->formHidden($form->get($type . 'Crop' . $param));
    }
}
?>
<?php
$submit = $form->get('submit');
$approve = $this->acl(DecisionAclService::class)->isAllowed('organ', 'approve') ? ' / ' . $this->translate('Approve') : '';
$submit->setLabel($this->translate('Save') . $approve);
$submit->setAttribute('class', 'btn btn-primary');
?>
<?= $this->formButton($submit) ?>

<?= $this->form()->closeTag(); ?>
<script nonce="<?= NONCE_REPLACEMENT_STRING ?>">
    GEDITOR.MarkdownEditor
        .create(document.querySelector('#dutch-description'), {
            language: '<?= $lang ?>'
        })
        .catch(error => {
            console.error(error);
        });

    GEDITOR.MarkdownEditor
        .create(document.querySelector('#english-description'), {
            language: '<?= $lang ?>'
        })
        .catch(error => {
            console.error(error);
        });

    function readImage(input, element, aspectX, aspectY, callback) {

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            $('#' + element).empty();
            $('#' + element).append('<img class="img-responsive" id="' + element + 'Image"/>');
            reader.onload = function (e) {
                $('#' + element + 'Image').attr('src', e.target.result);
                $('#' + element + 'Alert').show();
                $('#' + element + 'Image').imagesLoaded(function () {
                    var width = $('#' + element + 'Image').width();
                    var height = Math.round(width / aspectX * aspectY);
                    $('#' + element + 'Image').Jcrop({
                        onSelect: callback,
                        bgColor: 'black',
                        bgOpacity: .4,
                        setSelect: [0, 0, width, height],
                        aspectRatio: aspectX / aspectY
                    });
                });
            };

            reader.readAsDataURL(input.files[0]);
            //reader.readAsArrayBuffer(input.files[0]);


        }
    }

    $("#thumbnailUpload").change(function () {
        readImage(this, 'thumbnailPreview', 16, 9, function (c) {
            var width = $('#thumbnailPreviewImage').width();
            var height = $('#thumbnailPreviewImage').height();
            $('[name=thumbnailCropX]').val(c.x / width);
            $('[name=thumbnailCropY]').val(c.y / height);
            $('[name=thumbnailCropWidth]').val(c.w / width);
            $('[name=thumbnailCropHeight]').val(c.h / height);
        });
    });

    $("#coverUpload").change(function () {
        readImage(this, 'coverPreview', 16, 4, function (c) {
            var width = $('#coverPreviewImage').width();
            var height = $('#coverPreviewImage').height();
            $('[name=coverCropX]').val(c.x / width);
            $('[name=coverCropY]').val(c.y / height);
            $('[name=coverCropWidth]').val(c.w / width);
            $('[name=coverCropHeight]').val(c.h / height);
        });
    });
</script>
